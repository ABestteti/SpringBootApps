/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.57).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.BalanceSheet;
import io.swagger.model.ProblemDetail;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2024-06-28T18:25:49.127268551Z[GMT]")
@Validated
public interface AssetsAndLiabilitiesApi {

    @Operation(summary = "Returns a balance sheet of assets and liabilites of a party.", description = "This capability returns a balance sheet of assets and liabilites of a party. ", security = {
        @SecurityRequirement(name = "oAuthConfiguration", scopes = {
            "customerInformation:balanceSheet:read"        })    }, tags={ "BalanceSheet" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Successful (OK)", content = @Content(mediaType = "application/vnd.ca.bnc.customerinformation+json;version&#x3D;v1", schema = @Schema(implementation = BalanceSheet.class))),
        
        @ApiResponse(responseCode = "400", description = "Bad request", content = @Content(mediaType = "application/problem+json", schema = @Schema(implementation = ProblemDetail.class))),
        
        @ApiResponse(responseCode = "401", description = "Unauthorized Access", content = @Content(mediaType = "application/problem+json", schema = @Schema(implementation = ProblemDetail.class))),
        
        @ApiResponse(responseCode = "403", description = "Forbidden", content = @Content(mediaType = "application/problem+json", schema = @Schema(implementation = ProblemDetail.class))),
        
        @ApiResponse(responseCode = "500", description = "Internal Server Error", content = @Content(mediaType = "application/problem+json", schema = @Schema(implementation = ProblemDetail.class))) })
    @RequestMapping(value = "/assetsAndLiabilities/balanceSheet",
        produces = { "application/vnd.ca.bnc.customerinformation+json;version=v1", "application/problem+json" }, 
        method = RequestMethod.GET)
    ResponseEntity<BalanceSheet> getBalanceSheet(@NotNull @Parameter(in = ParameterIn.QUERY, description = "BNC client unique identifier." ,required=true,schema=@Schema()) @Valid @RequestParam(value = "bncId", required = true) String bncId
, @Parameter(in = ParameterIn.HEADER, description = "" ,required=true,schema=@Schema()) @RequestHeader(value="employeeId", required=true) String employeeId
, @Parameter(in = ParameterIn.HEADER, description = "Unique abbreviation (code) used to identify a Line of Business." ,required=true,schema=@Schema()) @RequestHeader(value="lineOfBusiness", required=true) String lineOfBusiness
, @Parameter(in = ParameterIn.HEADER, description = "The tracing information for the request." ,schema=@Schema()) @RequestHeader(value="traceparent", required=false) String traceparent
);

}

